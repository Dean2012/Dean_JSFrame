/**
 * 悬浮框管理模块
 * @author Dean
 */ 
var TipManager = TipManager || {};

TipManager.MessageQueue = [];
TipManager.isRunning = false;
TipManager.tipLayer = null;

/**
 * 悬浮提示
 * 文本提示：TipManager.floatTip(TipType.FT_TXT,'提示文本');
 * 玩家属性：TipManager.floatTip(TipType.FT_POWER,[-1,100]);
 * value:[变化值,总值] --变化值,触发提示；总值，触发更新
 * */
TipManager.floatTip = function (dataType, value)
{
    if (TipManager.tipLayer == null) {
        var currentScene = cc.director.getRunningScene();
        TipManager.tipLayer = new FloatTipLayer();
        currentScene.addChild(TipManager.tipLayer, 1000);
    };

    var tempList = [];
    if (typeof(dataType) == "string")
    {
        // 成就界面特殊处理
        if (dataType == TipType.FT_ACHIEVE) {
            //value = {type:credits,num:100,leftIcon:XXX,tot:xxx,
            //    rightIcon:XXX,name:xxx,des:xxx,bg:xxx,rewardDesc:xxx}
            tempList["type"] = value["type"];
            tempList["value"] = value["num"];
            tempList["detail"] = value;
            TipManager.MessageQueue.push(tempList);

            // VoManager.localPlayer.updateSub(value["type"],value["num"]);
            TipManager.showTipSameTime();
            return ;
        };

        if (typeof(value) == "number") 
        {
            tempList["type"] = dataType;
            tempList["value"] = value;
            TipManager.MessageQueue.push(tempList);

            VoManager.localPlayer.updateSub(dataType,value);
        }
        else
        {
            if(value[0] != null)
            {
                tempList["type"] = dataType;
                tempList["value"] = value[0];
                TipManager.MessageQueue.push(tempList);
            }

            if (dataType != TipType.FT_EXPLORE) {
                if (value[1] != null)
                    VoManager.localPlayer.updateAttr(dataType,value[1]);
            }
            else {
                if (value[1] != null)
                    VoManager.localPlayer.updateExplore(value[1]);
            }
        }

        // 如果扣除体力就把倒计时开启
        if (dataType == TipType.FT_POWER) {
            if (VoManager.localPlayer.countDown[0] == 0) {
                VoManager.localPlayer.countDown[0] = VoManager.getSysItem("powertime");
                var curTime = Util.updateTime();
                VoManager.localPlayer.currentTime = parseInt(curTime.getTime()/1000);
            };

            var maxpower = VoManager.getItem(360000+VoManager.localPlayer.vip['lv']).power;
            if (VoManager.localPlayer.power >= maxpower)
                VoManager.localPlayer.countDown[0] = 0;
        }
        else if (dataType == TipType.FT_EXPLORE) {
            if (VoManager.localPlayer.countDown[1] == 0) {
                VoManager.localPlayer.countDown[1] = VoManager.getSysItem("exploreTime");
                var curTime = new Date();
                VoManager.localPlayer.curExpolreTime = parseInt(curTime.getTime()/1000);
            };

            var maxExplore = VoManager.getItem(360000+VoManager.localPlayer.vip['lv']).explore;
            if (VoManager.localPlayer.explore["nowExploreNum"] >= this.maxExplore)
                VoManager.localPlayer.countDown[1] = 0;
        }
        else if (dataType == TipType.FT_PVP) {
            if (VoManager.localPlayer.countDown[2] == 0) {
                VoManager.localPlayer.countDown[2] = VoManager.getSysItem("pvpRecoverTime");
                var curTime = new Date();
                VoManager.localPlayer.curPvpTime = parseInt(curTime.getTime()/1000);
            };

            if (VoManager.localPlayer.pvpFightNum >= this.maxPvp)
                VoManager.localPlayer.countDown[2] = 0;
        }

        var event = new cc.EventCustom("upPlayerDate");
        event.setUserData(dataType);
        cc.eventManager.dispatchEvent(event);

        var event = new cc.EventCustom("bottomPlayerDate");
        event.setUserData(dataType);
        cc.eventManager.dispatchEvent(event);
    }
    else
    {
    	tempList["type"] = dataType;
    	tempList["value"] = value;
        TipManager.MessageQueue.push(tempList);
    }

    TipManager.showTipSameTime();
};

/**
 * 通用弹出框 （按钮控制）
 * title 如果没有就不显示  
 * paramsItemList 传入string直接显示文本内容
 * paramsItemList [{id:"",num:""}]
 * paramsButton 按钮类  [{strName:"",cb:"","cbParam":""},]
 * hasBG 是否有背景 默认没有背景
 * extParam offsetX offsetY
 * e.g MainUILayer [gotoVipLayer gotoRechargeLayer gotoRewardLayer]
 */ 
TipManager.floatWindow = function(paramsItemList, paramsButton, title, hasBG, parent, zIdx, extParam)
{
	if(!parent)
		parent = cc.director.getRunningScene();
    if(!zIdx)
    	zIdx = 9000;
    
    var myWindow = new TipWindow(paramsItemList, paramsButton, title, hasBG, extParam);
    parent.addChild(myWindow, zIdx);
}

TipManager.showTipSameTime = function () {
    if (TipManager.MessageQueue.length == 0 || TipManager.isRunning || TipManager.tipLayer == null) {
        return ;
    }
    else {
        if (TipManager.MessageQueue[0]["detail"])
            setTimeout(TipManager.showTipSameTime, 2500);
        else 
            setTimeout(TipManager.showTipSameTime, 1000);
    }

    TipManager.isRunning = true;

    var type = TipManager.MessageQueue[0]["type"];
    var value = TipManager.MessageQueue[0]["value"];
    var detail = TipManager.MessageQueue[0]["detail"] || null;

    if (typeof(type) == "string")
    {      
        if (value < 0) {
            var tempText = VoManager.getLocalizedString(49);
            value = -value;
        }
        else
            tempText = VoManager.getLocalizedString(12);


        var tempWord = null;
        if (type == "coin")
            tempWord = Util.replaceStrParam(tempText,[value, VoManager.getLocalizedString(5)]);
        else if (type == "power")
            tempWord = Util.replaceStrParam(tempText,[value, VoManager.getLocalizedString(8)]);
        else if (type == "credits")
            tempWord = Util.replaceStrParam(tempText,[value, VoManager.getLocalizedString(6)]);
        else if (type == "exp")
            tempWord = Util.replaceStrParam(tempText,[value, VoManager.getLocalizedString(9)]);
        else if (type == "alloy")
            tempWord = Util.replaceStrParam(tempText,[value, VoManager.getLocalizedString(7)]);
        else
            tempWord = Util.replaceStrParam(tempText,[value, type]);

        // if (!detail)
        //     var temptip = new FloatTip(null, tempWord);
        // else 
        var temptip = new FloatTip(null, tempWord, null, detail);

        TipManager.tipLayer.addChild(temptip);
    }
    else
    {
        var temptip = new FloatTip(null, value);
        TipManager.tipLayer.addChild(temptip);
    }

    TipManager.MessageQueue.shift();
};

var FloatTipLayer = cc.Layer.extend({
    ctor:function()
    {
        this._super();

        this.setName("floatTipLayer");
    },
    onExit:function()
    {
        this._super();
        TipManager.tipLayer = null;
        TipManager.isRunning = false;
        TipManager.MessageQueue = [];
    }
})

/**详细说明见TipWindow2*/
TipManager.floatWindow2 = function(voList,parent,zIdx)
{
	if(!parent)
		parent = cc.director.getRunningScene();
	if(!zIdx)
		zIdx = 9000;

	var myWindow = new TipWindow2(voList);
	myWindow.x = cc.winSize.width / 2;
	myWindow.y = cc.winSize.height / 2;
	parent.addChild(myWindow, zIdx);
}

TipManager.inPutWindow = function(voList,parent,zIdx)
{
    if(!parent)
        parent = cc.director.getRunningScene();
    if(!zIdx)
        zIdx = 9000;
    
    var myWindow = new TipInputWindow(voList);
    parent.addChild(myWindow, zIdx);
}